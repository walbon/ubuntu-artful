linux (4.11.0-4.9) artful; urgency=low

  [ Seth Forshee ]

  * Release Tracking Bug
    - LP: #1693229

  * arm64: mbigen updates (LP: #1692783)
    - Revert "UBUNTU: SAUCE: irqchip: mbigen: Add ACPI support"
    - irqchip/mbigen: Add ACPI support
    - irqchip/mbigen: Fix return value check in mbigen_device_probe()
    - irqchip/mbigen: Fix memory mapping code
    - irqchip/mbigen: Fix potential NULL dereferencing
    - irqchip/mbigen: Fix the clear register offset calculation

  * Ubuntu16.04.03: POWER9 XIVE: msgsnd/doorbell IPI support (backport)
    (LP: #1691973)
    - powerpc/64s: Add msgp facility unavailable log string
    - powerpc/64s: Add SCV FSCR bit for ISA v3.0
    - powerpc/xive: Native exploitation of the XIVE interrupt controller
    - powerpc: Change the doorbell IPI calling convention
    - powerpc: Introduce msgsnd/doorbell barrier primitives
    - powerpc/64s: Avoid a branch for ppc_msgsnd
    - powerpc/powernv: POWER9 support for msgsnd/doorbell IPI
    - powerpc/powernv: Add XIVE related definitions to opal-api.h
    - powerpc: Add more PPC bit conversion macros
    - powerpc: Add optional smp_ops->prepare_cpu SMP callback
    - powerpc/smp: Remove migrate_irq() custom implementation
    - powerpc/powernv: Fix oops on P9 DD1 in cause_ipi()

  * Hardware transaction memory corruption (LP: #1691477)
    - powerpc/tm: Fix FP and VMX register corruption

  * Offlined CPUs of a core fail to come up online on POWER9 DD1 (Ubuntu 17.04)
    (LP: #1685792)
    - powerpc/powernv: Move CPU-Offline idle state invocation from smp.c to idle.c
    - powerpc/powernv/smp: Add busy-wait loop as fall back for CPU-Hotplug
    - powerpc/powernv/idle: Don't override default/deepest directly in kernel

  * Merlin SGMII fail on Ubuntu Xenial HWE kernel (LP: #1686305)
    - drivers: net: phy: xgene: Fix mdio write

  * powerpc/powernv: Introduce address translation services for Nvlink2
    (LP: #1690412)
    - powerpc/powernv: Require MMU_NOTIFIER to fix NPU build
    - drivers/of/base.c: Add of_property_read_u64_index
    - powerpc/powernv: Add sanity checks to pnv_pci_get_{gpu|npu}_dev
    - powerpc/powernv: Introduce address translation services for Nvlink2

  * arm64/ACPI support for SBSA watchdog (LP: #1688114)
    - clocksource: arm_arch_timer: clean up printk usage
    - clocksource: arm_arch_timer: rename type macros
    - clocksource: arm_arch_timer: rename the PPI enum
    - clocksource: arm_arch_timer: move enums and defines to header file
    - clocksource: arm_arch_timer: add a new enum for spi type
    - clocksource: arm_arch_timer: rework PPI selection
    - clocksource: arm_arch_timer: split dt-only rate handling
    - clocksource: arm_arch_timer: refactor arch_timer_needs_probing
    - clocksource: arm_arch_timer: move arch_timer_needs_of_probing into DT init
      call
    - clocksource: arm_arch_timer: add structs to describe MMIO timer
    - clocksource: arm_arch_timer: split MMIO timer probing.
    - [Config] CONFIG_ACPI_GTDT=y
    - acpi/arm64: Add GTDT table parse driver
    - clocksource: arm_arch_timer: simplify ACPI support code.
    - acpi/arm64: Add memory-mapped timer support in GTDT driver
    - clocksource: arm_arch_timer: add GTDT support for memory-mapped timer
    - acpi/arm64: Add SBSA Generic Watchdog support in GTDT driver

  * arm64: Add CNTFRQ_EL0 handler (LP: #1688164)
    - arm64: Add CNTFRQ_EL0 trap handler

  * Support IPMI system interface on Cavium ThunderX (LP: #1688132)
    - i2c: thunderx: Enable HWMON class probing

  * Support low-pin-count devices on Hisilicon SoCs (LP: #1677319)
    - [Config] CONFIG_LIBIO=y on arm64 only
    - SAUCE: LIBIO: Introduce a generic PIO mapping method
    - SAUCE: OF: Add missing I/O range exception for indirect-IO devices
    - [Config] CONFIG_HISILICON_LPC=y
    - SAUCE: LPC: Support the device-tree LPC host on Hip06/Hip07
    - SAUCE: LIBIO: Support the dynamically logical PIO registration of ACPI host
      I/O
    - SAUCE: LPC: Add the ACPI LPC support
    - SAUCE: PCI: Apply the new generic I/O management on PCI IO hosts
    - SAUCE: PCI: Restore codepath for !CONFIG_LIBIO

  * POWER9: CAPI2 enablement (LP: #1686519)
    - cxl: Read vsec perst load image
    - cxl: Remove unused values in bare-metal environment.
    - cxl: Keep track of mm struct associated with a context
    - cxl: Update implementation service layer
    - cxl: Rename some psl8 specific functions
    - cxl: Isolate few psl8 specific calls
    - cxl: Add psl9 specific code

  * POWER9: Additional patches for TTY and CPU_IDLE (LP: #1674325)
    - SAUCE: tty: Fix ldisc crash on reopened tty

  * Artful update to 4.11.2 stable release (LP: #1692332)
    - xen: adjust early dom0 p2m handling to xen hypervisor behavior
    - target: Fix compare_and_write_callback handling for non GOOD status
    - target/fileio: Fix zero-length READ and WRITE handling
    - iscsi-target: Set session_fall_back_to_erl0 when forcing reinstatement
    - usb: xhci: bInterval quirk for TI TUSB73x0
    - usb: host: xhci: print correct command ring address
    - USB: serial: ftdi_sio: add device ID for Microsemi/Arrow SF2PLUS Dev Kit
    - USB: Proper handling of Race Condition when two USB class drivers try to
      call init_usb_class simultaneously
    - USB: Revert "cdc-wdm: fix "out-of-sync" due to missing notifications"
    - staging: vt6656: use off stack for in buffer USB transfers.
    - staging: vt6656: use off stack for out buffer USB transfers.
    - staging: gdm724x: gdm_mux: fix use-after-free on module unload
    - staging: wilc1000: Fix problem with wrong vif index
    - staging: sir: fill in missing fields and fix probe
    - staging: comedi: jr3_pci: fix possible null pointer dereference
    - staging: comedi: jr3_pci: cope with jiffies wraparound
    - usb: misc: add missing continue in switch
    - usb: gadget: legacy gadgets are optional
    - usb: Make sure usb/phy/of gets built-in
    - usb: hub: Fix error loop seen after hub communication errors
    - usb: hub: Do not attempt to autosuspend disconnected devices
    - x86/boot: Fix BSS corruption/overwrite bug in early x86 kernel startup
    - selftests/x86/ldt_gdt_32: Work around a glibc sigaction() bug
    - x86, pmem: Fix cache flushing for iovec write < 8 bytes
    - um: Fix PTRACE_POKEUSER on x86_64
    - perf/x86: Fix Broadwell-EP DRAM RAPL events
    - KVM: x86: fix user triggerable warning in kvm_apic_accept_events()
    - Revert "KVM: Support vCPU-based gfn->hva cache"
    - KVM: arm/arm64: fix races in kvm_psci_vcpu_on
    - arm64: KVM: Fix decoding of Rt/Rt2 when trapping AArch32 CP accesses
    - block: fix blk_integrity_register to use template's interval_exp if not 0
    - crypto: s5p-sss - Close possible race for completed requests
    - crypto: algif_aead - Require setkey before accept(2)
    - crypto: ccp - Use only the relevant interrupt bits
    - crypto: ccp - Disable interrupts early on unload
    - crypto: ccp - Change ISR handler method for a v3 CCP
    - crypto: ccp - Change ISR handler method for a v5 CCP
    - dm crypt: rewrite (wipe) key in crypto layer using random data
    - dm era: save spacemap metadata root after the pre-commit
    - dm rq: check blk_mq_register_dev() return value in
      dm_mq_init_request_queue()
    - dm thin: fix a memory leak when passing discard bio down
    - vfio/type1: Remove locked page accounting workqueue
    - iov_iter: don't revert iov buffer if csum error
    - IB/core: Fix sysfs registration error flow
    - IB/core: Fix kernel crash during fail to initialize device
    - IB/core: For multicast functions, verify that LIDs are multicast LIDs
    - IB/IPoIB: ibX: failed to create mcg debug file
    - IB/mlx4: Fix ib device initialization error flow
    - IB/mlx4: Reduce SRIOV multicast cleanup warning message to debug level
    - IB/hfi1: Prevent kernel QP post send hard lockups
    - perf auxtrace: Fix no_size logic in addr_filter__resolve_kernel_syms()
    - perf annotate s390: Fix perf annotate error -95 (4.10 regression)
    - perf annotate s390: Implement jump types for perf annotate
    - jbd2: fix dbench4 performance regression for 'nobarrier' mounts
    - ext4: evict inline data when writing to memory map
    - orangefs: fix bounds check for listxattr
    - orangefs: clean up oversize xattr validation
    - orangefs: do not set getattr_time on orangefs_lookup
    - orangefs: do not check possibly stale size on truncate
    - fs/xattr.c: zero out memory copied to userspace in getxattr
    - ceph: fix memory leak in __ceph_setxattr()
    - fs: fix data invalidation in the cleancache during direct IO
    - fs/block_dev: always invalidate cleancache in invalidate_bdev()
    - mm: vmscan: fix IO/refault regression in cache workingset transition
    - mm: prevent potential recursive reclaim due to clearing PF_MEMALLOC
    - Fix match_prepath()
    - Do not return number of bytes written for ioctl CIFS_IOC_COPYCHUNK_FILE
    - Set unicode flag on cifs echo request to avoid Mac error
    - SMB3: Work around mount failure when using SMB3 dialect to Macs
    - CIFS: fix mapping of SFM_SPACE and SFM_PERIOD
    - cifs: fix leak in FSCTL_ENUM_SNAPS response handling
    - cifs: fix CIFS_ENUMERATE_SNAPSHOTS oops
    - CIFS: fix oplock break deadlocks
    - cifs: fix CIFS_IOC_GET_MNT_INFO oops
    - CIFS: add misssing SFM mapping for doublequote
    - ovl: do not set overlay.opaque on non-dir create
    - padata: free correct variable
    - md/raid1: avoid reusing a resync bio after error handling.
    - device-dax: fix cdev leak
    - device-dax: fix sysfs attribute deadlock
    - dax: prevent invalidation of mapped DAX entries
    - mm: fix data corruption due to stale mmap reads
    - ext4: return to starting transaction in ext4_dax_huge_fault()
    - dax: fix PMD data corruption when fault races with write
    - f2fs: fix wrong max cost initialization
    - Revert "f2fs: put allocate_segment after refresh_sit_entry"
    - f2fs: fix fs corruption due to zero inode page
    - f2fs: fix multiple f2fs_add_link() having same name for inline dentry
    - f2fs: check entire encrypted bigname when finding a dentry
    - f2fs: Make flush bios explicitely sync
    - initramfs: Always do fput() and load modules after rootfs populate
    - initramfs: avoid "label at end of compound statement" error
    - fscrypt: fix context consistency check when key(s) unavailable
    - fscrypt: avoid collisions when presenting long encrypted filenames
    - serial: samsung: Use right device for DMA-mapping calls
    - serial: samsung: Add missing checks for dma_map_single failure
    - serial: omap: fix runtime-pm handling on unbind
    - serial: omap: suspend device on probe errors
    - tty: pty: Fix ldisc flush after userspace become aware of the data already
    - tty: pl011: use "qdf2400_e44" as the earlycon name for QDF2400 E44
    - Bluetooth: Fix user channel for 32bit userspace on 64bit kernel
    - Bluetooth: hci_bcm: add missing tty-device sanity check
    - Bluetooth: hci_intel: add missing tty-device sanity check
    - cgroup: fix spurious warnings on cgroup_is_dead() from cgroup_sk_alloc()
    - libata: reject passthrough WRITE SAME requests
    - ipmi: Fix kernel panic at ipmi_ssif_thread()
    - libnvdimm, region: fix flush hint detection crash
    - libnvdimm, pmem: fix a NULL pointer BUG in nd_pmem_notify
    - libnvdimm: fix nvdimm_bus_lock() vs device_lock() ordering
    - libnvdimm, pfn: fix 'npfns' vs section alignment
    - pstore: Fix flags to enable dumps on powerpc
    - pstore: Use dynamic spinlock initializer
    - pstore: Shut down worker when unregistering
    - Linux 4.11.2

  * please enable CONFIG_ARM64_LSE_ATOMICS (LP: #1691614)
    - [Config] CONFIG_ARM64_LSE_ATOMICS=y

  * iptables regression causing snapd ADT failure (LP: #1691752)
    - SAUCE: Revert "iptables: use match, target and data copy_to_user helpers"

  * [Regression] NUMA_BALANCING disabled on arm64 (LP: #1690914)
    - [Config] CONFIG_NUMA_BALANCING{,_DEFAULT_ENABLED}=y on arm64

  * exec'ing a setuid binary from a threaded program sometimes fails to setuid
    (LP: #1672819)
    - SAUCE: exec: ensure file system accounting in check_unsafe_exec is correct

  * CVE-2013-1060 (LP: #1206200)
    - [Debian] (no-squash) supply perf with appropriate prefix to ensure use of
      local config

  * Miscellaneous Ubuntu changes
    - [Debian] Work out upstream tag for use with gen-auto-reconstruct
    - [Debian] Add build-dep on libnuma-dev to enable 'perf bench numa'

  * Miscellaneous upstream changes
    - Revert "UBUNTU: [Debian] supply perf with appropriate prefix to ensure use
      of local config"

 -- Seth Forshee <seth.forshee@canonical.com>  Wed, 24 May 2017 08:57:22 -0500

linux (4.11.0-3.8) artful; urgency=low

  [ Seth Forshee ]

  * Release Tracking Bug
    - LP: #1690999

  * apparmor_parser hangs indefinitely when called by multiple threads
    (LP: #1645037)
    - SAUCE: apparmor: fix lock ordering for mkdir

  * apparmor leaking securityfs pin count (LP: #1660846)
    - SAUCE: apparmor: fix leak on securityfs pin count

  * apparmor reference count leak when securityfs_setup_d_inode\ () fails
    (LP: #1660845)
    - SAUCE: apparmor: fix reference count leak when securityfs_setup_d_inode()
      fails

  * apparmor not checking error if security_pin_fs() fails (LP: #1660842)
    - SAUCE: apparmor: fix not handling error case when securityfs_pin_fs() fails

  * libvirt profile is blocking global setrlimit despite having no rlimit rule
    (LP: #1679704)
    - SAUCE: apparmor: fix complain mode failure for rlimit mediation
    - apparmor: update auditing of rlimit check to provide capability information

  * apparmor: does not provide a way to detect policy updataes (LP: #1678032)
    - SAUCE: apparmor: add policy revision file interface

  * apparmor does not make support of query data visible (LP: #1678023)
    - SAUCE: apparmor: add label data availability to the feature set

  * apparmor query interface does not make supported query info available
    (LP: #1678030)
    - SAUCE: apparmor: add information about the query inteface to the feature set

  * change_profile incorrect when using namespaces with a compound stack
    (LP: #1677959)
    - SAUCE: apparmor: fix label parse for stacked labels

  * Regression in 4.4.0-65-generic causes very frequent system crashes
    (LP: #1669611)
    - apparmor: sync of apparmor 3.6+ (17.04)

  * Artful update to 4.11.1 stable release (LP: #1690814)
    - dm ioctl: prevent stack leak in dm ioctl call
    - drm/sti: fix GDP size to support up to UHD resolution
    - power: supply: lp8788: prevent out of bounds array access
    - brcmfmac: Ensure pointer correctly set if skb data location changes
    - brcmfmac: Make skb header writable before use
    - sparc64: fix fault handling in NGbzero.S and GENbzero.S
    - refcount: change EXPORT_SYMBOL markings
    - net: macb: fix phy interrupt parsing
    - tcp: fix access to sk->sk_state in tcp_poll()
    - geneve: fix incorrect setting of UDP checksum flag
    - bpf: enhance verifier to understand stack pointer arithmetic
    - bpf, arm64: fix jit branch offset related to ldimm64
    - tcp: fix wraparound issue in tcp_lp
    - net: ipv6: Do not duplicate DAD on link up
    - net: usb: qmi_wwan: add Telit ME910 support
    - tcp: do not inherit fastopen_req from parent
    - ipv4, ipv6: ensure raw socket message is big enough to hold an IP header
    - rtnetlink: NUL-terminate IFLA_PHYS_PORT_NAME string
    - ipv6: initialize route null entry in addrconf_init()
    - ipv6: reorder ip6_route_dev_notifier after ipv6_dev_notf
    - tcp: randomize timestamps on syncookies
    - bnxt_en: allocate enough space for ->ntp_fltr_bmap
    - bpf: don't let ldimm64 leak map addresses on unprivileged
    - net: mdio-mux: bcm-iproc: call mdiobus_free() in error path
    - f2fs: sanity check segment count
    - xen/arm,arm64: fix xen_dma_ops after 815dd18 "Consolidate get_dma_ops..."
    - xen: Revert commits da72ff5bfcb0 and 72a9b186292d
    - block: get rid of blk_integrity_revalidate()
    - Linux 4.11.1

  * Module signing exclusion for staging drivers does not work properly
    (LP: #1690908)
    - SAUCE: Fix module signing exclusion in package builds

  * perf: qcom: Add L3 cache PMU driver (LP: #1689856)
    - [Config] CONFIG_QCOM_L3_PMU=y
    - perf: qcom: Add L3 cache PMU driver

  * No PMU support for ACPI-based arm64 systems (LP: #1689661)
    - drivers/perf: arm_pmu: rework per-cpu allocation
    - drivers/perf: arm_pmu: manage interrupts per-cpu
    - drivers/perf: arm_pmu: split irq request from enable
    - drivers/perf: arm_pmu: remove pointless PMU disabling
    - drivers/perf: arm_pmu: define armpmu_init_fn
    - drivers/perf: arm_pmu: fold init into alloc
    - drivers/perf: arm_pmu: factor out pmu registration
    - drivers/perf: arm_pmu: simplify cpu_pmu_request_irqs()
    - drivers/perf: arm_pmu: handle no platform_device
    - drivers/perf: arm_pmu: rename irq request/free functions
    - drivers/perf: arm_pmu: split cpu-local irq request/free
    - drivers/perf: arm_pmu: move irq request/free into probe
    - drivers/perf: arm_pmu: split out platform device probe logic
    - arm64: add function to get a cpu's MADT GICC table
    - [Config] CONFIG_ARM_PMU_ACPI=y
    - drivers/perf: arm_pmu: add ACPI framework
    - arm64: pmuv3: handle !PMUv3 when probing
    - arm64: pmuv3: use arm_pmu ACPI framework

  * Fix NVLINK2 TCE route (LP: #1690155)
    - powerpc/powernv: Fix TCE kill on NVLink2

  * CVE-2017-0605
    - tracing: Use strlcpy() instead of strcpy() in __trace_find_cmdline()

  * Miscellaneous Ubuntu changes
    - [Config] Restore powerpc arch to annotations file
    - [Config] Disable runtime testing modules
    - [Config] Disable drivers not needed on s390x
    - [Config] Update annotations for 4.11
    - [Config] updateconfigs after apparmor updates

  * Miscellaneous upstream changes
    - apparmor: use SHASH_DESC_ON_STACK
    - apparmor: fix invalid reference to index variable of iterator line 836
    - apparmor: fix parameters so that the permission test is bypassed at boot
    - apparmor: Make path_max parameter readonly
    - apparmorfs: Combine two function calls into one in aa_fs_seq_raw_abi_show()
    - apparmorfs: Use seq_putc() in two functions
    - apparmor: provide information about path buffer size at boot
    - apparmor: add/use fns to print hash string hex value

 -- Seth Forshee <seth.forshee@canonical.com>  Tue, 16 May 2017 00:39:13 -0500

linux (4.11.0-2.7) artful; urgency=low

  * kernel-wedge fails in artful due to leftover squashfs-modules d-i files
    (LP: #1688259)
    - Remove squashfs-modules files from d-i
    - [Config] as squashfs-modules is builtin kernel-image must Provides: it

  * [Zesty] d-i: replace msm_emac with qcom_emac (LP: #1677297)
    - Revert "UBUNTU: d-i: initrd needs msm_emac on amberwing platform."
    - d-i: initrd needs qcom_emac on amberwing platform.

  * update for V3 kernel bits and improved multiple fan slice support
    (LP: #1470091)
    - SAUCE: fan: tunnel multiple mapping mode (v3)

  * Miscellaneous Ubuntu changes
    - SAUCE: (noup) Update spl to 0.6.5.9-1ubuntu1, zfs to 0.6.5.9-5ubuntu5
    - Enable zfs
    - SAUCE: fan: add VXLAN implementation
    - SAUCE: (efi-lockdown) efi: Add EFI_SECURE_BOOT bit
    - SAUCE: (efi-lockdown) Add the ability to lock down access to the running
      kernel image
    - SAUCE: (efi-lockdown) efi: Lock down the kernel if booted in secure boot
      mode
    - SAUCE: (efi-lockdown) Enforce module signatures if the kernel is locked down
    - SAUCE: (efi-lockdown) Restrict /dev/mem and /dev/kmem when the kernel is
      locked down
    - SAUCE: (efi-lockdown) Add a sysrq option to exit secure boot mode
    - SAUCE: (efi-lockdown) kexec: Disable at runtime if the kernel is locked down
    - SAUCE: (efi-lockdown) Copy secure_boot flag in boot params across kexec
      reboot
    - SAUCE: (efi-lockdown) kexec_file: Disable at runtime if securelevel has been
      set
    - SAUCE: (efi-lockdown) hibernate: Disable when the kernel is locked down
    - SAUCE: (efi-lockdown) uswsusp: Disable when the kernel is locked down
    - SAUCE: (efi-lockdown) PCI: Lock down BAR access when the kernel is locked
      down
    - SAUCE: (efi-lockdown) x86: Lock down IO port access when the kernel is
      locked down
    - SAUCE: (efi-lockdown) x86: Restrict MSR access when the kernel is locked
      down
    - SAUCE: (efi-lockdown) asus-wmi: Restrict debugfs interface when the kernel
      is locked down
    - SAUCE: (efi-lockdown) ACPI: Limit access to custom_method when the kernel is
      locked down
    - SAUCE: (efi-lockdown) acpi: Ignore acpi_rsdp kernel param when the kernel
      has been locked down
    - SAUCE: (efi-lockdown) acpi: Disable ACPI table override if the kernel is
      locked down
    - SAUCE: (efi-lockdown) acpi: Disable APEI error injection if the kernel is
      locked down
    - SAUCE: (efi-lockdown) Enable cold boot attack mitigation
    - SAUCE: (efi-lockdown) bpf: Restrict kernel image access functions when the
      kernel is locked down
    - SAUCE: (efi-lockdown) scsi: Lock down the eata driver
    - SAUCE: (efi-lockdown) Prohibit PCMCIA CIS storage when the kernel is locked
      down
    - SAUCE: (efi-lockdown) Lock down TIOCSSERIAL
    - SAUCE: (efi-lockdown) Add EFI signature data types
    - SAUCE: (efi-lockdown) Add an EFI signature blob parser and key loader.
    - SAUCE: (efi-lockdown) KEYS: Add a system blacklist keyring
    - SAUCE: (efi-lockdown) MODSIGN: Import certificates from UEFI Secure Boot
    - SAUCE: (efi-lockdown) MODSIGN: Support not importing certs from db
    - SAUCE: (efi-lockdown) MODSIGN: Don't try secure boot if EFI runtime is
      disabled
    - SAUCE: (efi-lockdown) efi: Sanitize boot_params in efi stub
    - SAUCE: (efi-lockdown) efi: Add secure_boot state and status bit for
      MokSBState
    - SAUCE: (efi-lockdown) efi: Add sysctls for secureboot and MokSBState
    - [Config] Set values for UEFI secure boot lockdown options
    - Update dropped.txt

  [ Upstream Kernel Changes ]

  * rebase to v4.11

 -- Seth Forshee <seth.forshee@canonical.com>  Fri, 05 May 2017 07:43:14 -0500

linux (4.11.0-1.6) artful; urgency=low

  * Miscellaneous Ubuntu changes
    - [Debian] Use default compression for all packages
    - SAUCE: (namespace) block_dev: Support checking inode permissions in
      lookup_bdev()
    - SAUCE: (namespace) block_dev: Check permissions towards block device inode
      when mounting
    - SAUCE: (namespace) mtd: Check permissions towards mtd block device inode
      when mounting
    - SAUCE: (namespace) fs: Allow superblock owner to change ownership of inodes
    - SAUCE: (namespace) fs: Don't remove suid for CAP_FSETID for userns root
    - SAUCE: (namespace) fs: Allow superblock owner to access do_remount_sb()
    - SAUCE: (namespace) capabilities: Allow privileged user in s_user_ns to set
      security.* xattrs
    - SAUCE: (namespace) fs: Allow CAP_SYS_ADMIN in s_user_ns to freeze and thaw
      filesystems
    - SAUCE: (namespace) fuse: Add support for pid namespaces
    - SAUCE: (namespace) fuse: Support fuse filesystems outside of init_user_ns
    - SAUCE: (namespace) fuse: Restrict allow_other to the superblock's namespace
      or a descendant
    - SAUCE: (namespace) fuse: Allow user namespace mounts
    - SAUCE: (namespace) ext4: Add support for unprivileged mounts from user
      namespaces
    - SAUCE: (namespace) evm: Don't update hmacs in user ns mounts
    - SAUCE: (namespace) ext4: Add module parameter to enable user namespace
      mounts
    - SAUCE: (namespace) block_dev: Forbid unprivileged mounting when device is
      opened for writing

 -- Seth Forshee <seth.forshee@canonical.com>  Wed, 26 Apr 2017 10:08:29 -0500

linux (4.11.0-0.5) artful; urgency=low

  * [Hyper-V][SAUCE] pci-hyperv: Use only 16 bit integer for PCI domain
    (LP: #1684971)
    - SAUCE: pci-hyperv: Use only 16 bit integer for PCI domain

  * [Hyper-V] Ubuntu 14.04.2 LTS Generation 2 SCSI Errors on VSS Based Backups
    (LP: #1470250)
    - SAUCE: Tools: hv: vss: Thaw the filesystem and continue after freeze fails

  * Enable virtual scsi server driver for Power (LP: #1615665)
    - SAUCE: Return TCMU-generated sense data to fabric module

  * include/linux/security.h header syntax error with !CONFIG_SECURITYFS
    (LP: #1630990)
    - SAUCE: (no-up) include/linux/security.h -- fix syntax error with
      CONFIG_SECURITYFS=n

  * Miscellaneous Ubuntu changes
    - SAUCE: Import aufs driver
    - [Config] Enable aufs
    - [Debian] Add script to update virtualbox
    - ubuntu: vbox -- Update to 5.1.20-dfsg-2
    - Enable vbox
    - SAUCE: aufs -- Include linux/mm.h in fs/aufs/file.h

  [ Upstream Kernel Changes ]

  * rebase to v4.11-rc8

 -- Seth Forshee <seth.forshee@canonical.com>  Tue, 25 Apr 2017 13:42:54 -0500

linux (4.11.0-0.4) zesty; urgency=low

  * POWER9: Improve performance on memory management (LP: #1681429)
    - SAUCE: powerpc/mm/radix: Don't do page walk cache flush when doing full mm
      flush
    - SAUCE: powerpc/mm/radix: Remove unnecessary ptesync

  * Miscellaneous Ubuntu changes
    - find-missing-sauce.sh

  [ Upstream Kernel Changes ]

  * rebase to v4.11-rc7

 -- Seth Forshee <seth.forshee@canonical.com>  Tue, 18 Apr 2017 08:19:43 -0500

linux (4.11.0-0.3) zesty; urgency=low

  * Disable CONFIG_HVC_UDBG on ppc64el (LP: #1680888)
    - [Config] Disable CONFIG_HVC_UDBG on ppc64el

  * smartpqi driver needed in initram disk and installer (LP: #1680156)
    - [Config] Add smartpqi to d-i

  * Disable CONFIG_SECURITY_SELINUX_DISABLE (LP: #1680315)
    - [Config] CONFIG_SECURITY_SELINUX_DISABLE=n

  * Miscellaneous Ubuntu changes
    - [Config] flash-kernel should be a Breaks
    - [Config] drop the info directory
    - [Config] drop NOTES as obsolete
    - [Config] drop changelog.historical as obsolete
    - rebase to v4.11-rc6

  [ Upstream Kernel Changes ]

  * rebase to v4.11-rc6

 -- Tim Gardner <tim.gardner@canonical.com>  Tue, 11 Apr 2017 07:16:52 -0600

linux (4.11.0-0.2) zesty; urgency=low

  [ Upstream Kernel Changes ]

  * rebase to v4.11-rc5

 -- Tim Gardner <tim.gardner@canonical.com>  Mon, 03 Apr 2017 08:26:07 +0100

linux (4.11.0-0.1) zesty; urgency=low

  [ Upstream Kernel Changes ]

  * rebase to v4.11-rc4
    - LP: #1591053

 -- Tim Gardner <tim.gardner@canonical.com>  Mon, 20 Mar 2017 05:15:32 -0600

linux (4.11.0-0.0) zesty; urgency=low

  * dummy entry

 -- Tim Gardner <tim.gardner@canonical.com>  Mon, 20 Mar 2017 05:15:32 -0600
